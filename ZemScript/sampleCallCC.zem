/*
 * @author <a href="mailto:js.shujing@gmail.com">Jing Shu</a>
 * @author <a href="mailto:mrdiallo.abdoul@gmail.com">Abdoul Diallo</a>
 */
 

lambda(x){ println(x+1);};

lambda(x){ println(x+1);}(1);   								// affiche 2
lambda(x, y, z){ println(x+y+z);}(1, 2, 3);  					// affiche 6
lambda(x, y, z){ x = x+1; println(x+y+z);}(1, 2, 3);  		    // affiche 7
lambda(){
	x = 9;
	lambda(x, y, z){ x = x+1; println(x+y+z);}(4, 5, 6);
	println(x);
}();  														    // affiche 16 
															    //		   9
assignLambda = lambda(x){ return x+1;};
println(assignLambda(2));										// affiche 3
println("");															
															
f = function(aFunction){
	aFunction(99);
	println(88);
};

f(lambda(x){ return x+1;});

//callcc(toto);





















 

/*set = [|1, 2, 3, 4, 5, 6, 7, 8, 9|];

first = function(a_set) {
    if(set_size(a_set) > 0){
    	println(set_get(a_set, 0));
    }
};

cpt = 0;

loop = function() {
	call_cc {
		first(set);
		cpt = cpt + 1;
		if(cpt > 10){
			println("Finished !");
		} else {
			print("Continue ... Step ");
			println(cpt);
    		set_remove(set, 6);
    		set_add(set, 1);
    		callcc;
    	}
    };
};

loop();
*/

/*
(define (loop)
   (call/cc (lambda (k) (set! cont k)))
   (display-first lst)
   (newline)
   (if 
    (pair? lst) 
    (begin (set! lst (reverse (cdr lst))) (cont 2))
   )
)

(loop)*/